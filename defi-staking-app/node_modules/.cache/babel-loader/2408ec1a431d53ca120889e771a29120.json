{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getModuleDependencies;\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _resolve = _interopRequireDefault(require(\"resolve\"));\n\nvar _detective = _interopRequireDefault(require(\"detective\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction createModule(file) {\n  var source = _fs.default.readFileSync(file, 'utf-8');\n\n  var requires = (0, _detective).default(source);\n  return {\n    file: file,\n    requires: requires\n  };\n}\n\nfunction getModuleDependencies(entryFile) {\n  var rootModule = createModule(entryFile);\n  var modules = [rootModule]; // Iterate over the modules, even when new\n  // ones are being added\n\n  var _loop = function _loop() {\n    var mdl = _modules[_i];\n    mdl.requires.filter(function (dep) {\n      // Only track local modules, not node_modules\n      return dep.startsWith('./') || dep.startsWith('../');\n    }).forEach(function (dep) {\n      try {\n        var basedir = _path.default.dirname(mdl.file);\n\n        var depPath = _resolve.default.sync(dep, {\n          basedir: basedir\n        });\n\n        var depModule = createModule(depPath);\n        modules.push(depModule);\n      } catch (_err) {// eslint-disable-next-line no-empty\n      }\n    });\n  };\n\n  for (var _i = 0, _modules = modules; _i < _modules.length; _i++) {\n    _loop();\n  }\n\n  return modules;\n}","map":null,"metadata":{},"sourceType":"script"}