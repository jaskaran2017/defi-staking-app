{"ast":null,"code":"var camelcase = require('camelcase-css');\n\nvar UNITLESS = {\n  boxFlex: true,\n  boxFlexGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  fillOpacity: true,\n  strokeDashoffset: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\nfunction atRule(node) {\n  if (typeof node.nodes === 'undefined') {\n    return true;\n  } else {\n    return process(node);\n  }\n}\n\nfunction process(node) {\n  var name;\n  var result = {};\n  node.each(function (child) {\n    if (child.type === 'atrule') {\n      name = '@' + child.name;\n      if (child.params) name += ' ' + child.params;\n\n      if (typeof result[name] === 'undefined') {\n        result[name] = atRule(child);\n      } else if (Array.isArray(result[name])) {\n        result[name].push(atRule(child));\n      } else {\n        result[name] = [result[name], atRule(child)];\n      }\n    } else if (child.type === 'rule') {\n      var body = process(child);\n\n      if (result[child.selector]) {\n        for (var i in body) {\n          result[child.selector][i] = body[i];\n        }\n      } else {\n        result[child.selector] = body;\n      }\n    } else if (child.type === 'decl') {\n      if (child.prop[0] === '-' && child.prop[1] === '-') {\n        name = child.prop;\n      } else {\n        name = camelcase(child.prop);\n      }\n\n      var value = child.value;\n\n      if (!isNaN(child.value) && UNITLESS[name]) {\n        value = parseFloat(child.value);\n      }\n\n      if (child.important) value += ' !important';\n\n      if (typeof result[name] === 'undefined') {\n        result[name] = value;\n      } else if (Array.isArray(result[name])) {\n        result[name].push(value);\n      } else {\n        result[name] = [result[name], value];\n      }\n    }\n  });\n  return result;\n}\n\nmodule.exports = process;","map":null,"metadata":{},"sourceType":"script"}