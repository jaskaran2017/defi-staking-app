{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"/Users/apple/Desktop/remix_udamy/udamy_project/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _toConsumableArray = require(\"/Users/apple/Desktop/remix_udamy/udamy_project/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _defineProperty = require(\"/Users/apple/Desktop/remix_udamy/udamy_project/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _objectSpread = require(\"/Users/apple/Desktop/remix_udamy/udamy_project/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = resolveConfig;\n\nvar _negateValue = _interopRequireDefault(require(\"./negateValue\"));\n\nvar _corePluginList = _interopRequireDefault(require(\"../corePluginList\"));\n\nvar _configurePlugins = _interopRequireDefault(require(\"./configurePlugins\"));\n\nvar _defaultConfigStub = _interopRequireDefault(require(\"../../stubs/defaultConfig.stub\"));\n\nvar _colors = _interopRequireDefault(require(\"../public/colors\"));\n\nvar _defaults = require(\"./defaults\");\n\nvar _toPath = require(\"./toPath\");\n\nvar _normalizeConfig = require(\"./normalizeConfig\");\n\nvar _isPlainObject = _interopRequireDefault(require(\"./isPlainObject\"));\n\nvar _cloneDeep = require(\"./cloneDeep\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction isFunction(input) {\n  return typeof input === 'function';\n}\n\nfunction isObject(input) {\n  return typeof input === 'object' && input !== null;\n}\n\nfunction mergeWith(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  var customizer = sources.pop();\n\n  for (var _i = 0, _sources = sources; _i < _sources.length; _i++) {\n    var source = _sources[_i];\n\n    for (var k in source) {\n      var merged = customizer(target[k], source[k]);\n\n      if (merged === undefined) {\n        if (isObject(target[k]) && isObject(source[k])) {\n          target[k] = mergeWith(target[k], source[k], customizer);\n        } else {\n          target[k] = source[k];\n        }\n      } else {\n        target[k] = merged;\n      }\n    }\n  }\n\n  return target;\n}\n\nvar configUtils = {\n  colors: _colors.default,\n  negative: function negative(scale) {\n    // TODO: Log that this function isn't really needed anymore?\n    return Object.keys(scale).filter(function (key) {\n      return scale[key] !== '0';\n    }).reduce(function (negativeScale, key) {\n      var negativeValue = (0, _negateValue).default(scale[key]);\n\n      if (negativeValue !== undefined) {\n        negativeScale[\"-\".concat(key)] = negativeValue;\n      }\n\n      return negativeScale;\n    }, {});\n  },\n  breakpoints: function breakpoints(screens) {\n    return Object.keys(screens).filter(function (key) {\n      return typeof screens[key] === 'string';\n    }).reduce(function (breakpoints, key) {\n      return _objectSpread({}, breakpoints, _defineProperty({}, \"screen-\".concat(key), screens[key]));\n    }, {});\n  }\n};\n\nfunction value(valueToResolve) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  return isFunction(valueToResolve) ? valueToResolve.apply(void 0, args) : valueToResolve;\n}\n\nfunction collectExtends(items) {\n  return items.reduce(function (merged, _ref) {\n    var extend = _ref.extend;\n    return mergeWith(merged, extend, function (mergedValue, extendValue) {\n      if (mergedValue === undefined) {\n        return [extendValue];\n      }\n\n      if (Array.isArray(mergedValue)) {\n        return [extendValue].concat(_toConsumableArray(mergedValue));\n      }\n\n      return [extendValue, mergedValue];\n    });\n  }, {});\n}\n\nfunction mergeThemes(themes) {\n  return _objectSpread({}, themes.reduce(function (merged, theme) {\n    return (0, _defaults).defaults(merged, theme);\n  }, {}), {\n    // In order to resolve n config objects, we combine all of their `extend` properties\n    // into arrays instead of objects so they aren't overridden.\n    extend: collectExtends(themes)\n  });\n}\n\nfunction mergeExtensionCustomizer(merged, value1) {\n  // When we have an array of objects, we do want to merge it\n  if (Array.isArray(merged) && isObject(merged[0])) {\n    return merged.concat(value1);\n  } // When the incoming value is an array, and the existing config is an object, prepend the existing object\n\n\n  if (Array.isArray(value1) && isObject(value1[0]) && isObject(merged)) {\n    return [merged].concat(_toConsumableArray(value1));\n  } // Override arrays (for example for font-families, box-shadows, ...)\n\n\n  if (Array.isArray(value1)) {\n    return value1;\n  } // Execute default behaviour\n\n\n  return undefined;\n}\n\nfunction mergeExtensions(_ref2) {\n  var extend = _ref2.extend,\n      theme = _objectWithoutProperties(_ref2, [\"extend\"]);\n\n  return mergeWith(theme, extend, function (themeValue, extensions) {\n    // The `extend` property is an array, so we need to check if it contains any functions\n    if (!isFunction(themeValue) && !extensions.some(isFunction)) {\n      return mergeWith.apply(void 0, [{}, themeValue].concat(_toConsumableArray(extensions), [mergeExtensionCustomizer]));\n    }\n\n    return function (resolveThemePath, utils) {\n      return mergeWith.apply(void 0, [{}].concat(_toConsumableArray([themeValue].concat(_toConsumableArray(extensions)).map(function (e) {\n        return value(e, resolveThemePath, utils);\n      })), [mergeExtensionCustomizer]));\n    };\n  });\n}\n\nfunction resolveFunctionKeys(object) {\n  var resolvePath = function resolvePath(key, defaultValue) {\n    var path = (0, _toPath).toPath(key);\n    var index = 0;\n    var val = object;\n\n    while (val !== undefined && val !== null && index < path.length) {\n      val = val[path[index++]];\n      val = isFunction(val) ? val(resolvePath, configUtils) : val;\n    }\n\n    if (val === undefined) {\n      return defaultValue;\n    }\n\n    if ((0, _isPlainObject).default(val)) {\n      return (0, _cloneDeep).cloneDeep(val);\n    }\n\n    return val;\n  };\n\n  resolvePath.theme = resolvePath;\n\n  for (var key1 in configUtils) {\n    resolvePath[key1] = configUtils[key1];\n  }\n\n  return Object.keys(object).reduce(function (resolved, key) {\n    return _objectSpread({}, resolved, _defineProperty({}, key, isFunction(object[key]) ? object[key](resolvePath, configUtils) : object[key]));\n  }, {});\n}\n\nfunction extractPluginConfigs(configs) {\n  var allConfigs = [];\n  configs.forEach(function (config) {\n    allConfigs = [].concat(_toConsumableArray(allConfigs), [config]);\n    var ref1;\n    var plugins = (ref1 = config === null || config === void 0 ? void 0 : config.plugins) !== null && ref1 !== void 0 ? ref1 : [];\n\n    if (plugins.length === 0) {\n      return;\n    }\n\n    plugins.forEach(function (plugin) {\n      if (plugin.__isOptionsFunction) {\n        plugin = plugin();\n      }\n\n      var ref;\n      allConfigs = [].concat(_toConsumableArray(allConfigs), _toConsumableArray(extractPluginConfigs([(ref = plugin === null || plugin === void 0 ? void 0 : plugin.config) !== null && ref !== void 0 ? ref : {}])));\n    });\n  });\n  return allConfigs;\n}\n\nfunction resolveCorePlugins(corePluginConfigs) {\n  var result = _toConsumableArray(corePluginConfigs).reduceRight(function (resolved, corePluginConfig) {\n    if (isFunction(corePluginConfig)) {\n      return corePluginConfig({\n        corePlugins: resolved\n      });\n    }\n\n    return (0, _configurePlugins).default(corePluginConfig, resolved);\n  }, _corePluginList.default);\n\n  return result;\n}\n\nfunction resolvePluginLists(pluginLists) {\n  var result = _toConsumableArray(pluginLists).reduceRight(function (resolved, pluginList) {\n    return [].concat(_toConsumableArray(resolved), _toConsumableArray(pluginList));\n  }, []);\n\n  return result;\n}\n\nfunction resolveConfig(configs) {\n  var _ref3;\n\n  var allConfigs = [].concat(_toConsumableArray(extractPluginConfigs(configs)), [{\n    prefix: '',\n    important: false,\n    separator: ':',\n    variantOrder: _defaultConfigStub.default.variantOrder\n  }]);\n  var ref, ref2;\n  return (0, _normalizeConfig).normalizeConfig((_ref3 = (0, _defaults)).defaults.apply(_ref3, [{\n    theme: resolveFunctionKeys(mergeExtensions(mergeThemes(allConfigs.map(function (t) {\n      return (ref = t === null || t === void 0 ? void 0 : t.theme) !== null && ref !== void 0 ? ref : {};\n    })))),\n    corePlugins: resolveCorePlugins(allConfigs.map(function (c) {\n      return c.corePlugins;\n    })),\n    plugins: resolvePluginLists(configs.map(function (c) {\n      return (ref2 = c === null || c === void 0 ? void 0 : c.plugins) !== null && ref2 !== void 0 ? ref2 : [];\n    }))\n  }].concat(_toConsumableArray(allConfigs))));\n}","map":null,"metadata":{},"sourceType":"script"}