{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseDependency;\n\nvar _isGlob = _interopRequireDefault(require(\"is-glob\"));\n\nvar _globParent = _interopRequireDefault(require(\"glob-parent\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // Based on `glob-base`\n// https://github.com/micromatch/glob-base/blob/master/index.js\n\n\nfunction parseGlob(pattern) {\n  var glob = pattern;\n  var base = (0, _globParent).default(pattern);\n\n  if (base !== '.') {\n    glob = pattern.substr(base.length);\n\n    if (glob.charAt(0) === '/') {\n      glob = glob.substr(1);\n    }\n  }\n\n  if (glob.substr(0, 2) === './') {\n    glob = glob.substr(2);\n  }\n\n  if (glob.charAt(0) === '/') {\n    glob = glob.substr(1);\n  }\n\n  return {\n    base: base,\n    glob: glob\n  };\n}\n\nfunction parseDependency(normalizedFileOrGlob) {\n  if (normalizedFileOrGlob.startsWith('!')) {\n    return null;\n  }\n\n  var message;\n\n  if ((0, _isGlob).default(normalizedFileOrGlob)) {\n    var _parseGlob = parseGlob(normalizedFileOrGlob),\n        base = _parseGlob.base,\n        glob = _parseGlob.glob;\n\n    message = {\n      type: 'dir-dependency',\n      dir: _path.default.resolve(base),\n      glob: glob\n    };\n  } else {\n    message = {\n      type: 'dependency',\n      file: _path.default.resolve(normalizedFileOrGlob)\n    };\n  } // rollup-plugin-postcss does not support dir-dependency messages\n  // but directories can be watched in the same way as files\n\n\n  if (message.type === 'dir-dependency' && process.env.ROLLUP_WATCH === 'true') {\n    message = {\n      type: 'dependency',\n      file: message.dir\n    };\n  }\n\n  return message;\n}","map":null,"metadata":{},"sourceType":"script"}