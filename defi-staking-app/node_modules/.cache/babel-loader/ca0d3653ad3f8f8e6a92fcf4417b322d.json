{"ast":null,"code":"import _slicedToArray from \"/Users/apple/Desktop/remix_udamy/udamy_project/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/apple/Desktop/remix_udamy/udamy_project/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"./sub-components/Navbar\";\nimport Web3 from \"web3\";\nimport { loadavg } from \"os\";\n\nvar App = function App() {\n  var _useState = useState(\"0x0\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      account = _useState2[0],\n      setAccount = _useState2[1]; // const Web3 = async () => {\n  //   if (window.ethereum) {\n  //     window.web3 = await new Web3(window.ethereum);\n  //     await window.ethereum.enable();\n  //   } else if (window.web3) {\n  //     window.web3 = await new Web3(window.web3.currentProvider);\n  //   } else {\n  //     window.alert(\"Download MetaMask to run this application!\");\n  //   }\n  // };\n  // const loadProvider = async () => {\n  //   console.log(window.web3);\n  //   console.log(window.ethereum);\n  //   console.log(\"Metamask not detected.\");\n  // };\n  // useEffect(() => {\n  //   Web3();\n  // }, []);\n  // useEffect(() => {\n  //   loadProvider();\n  // }, []);\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n    account: account,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/apple/Desktop/remix_udamy/udamy_project/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js"],"names":["React","useState","useEffect","Navbar","Web3","loadavg","App","account","setAccount"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,SAASC,OAAT,QAAwB,IAAxB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,kBAEcL,QAAQ,CAAC,KAAD,CAFtB;AAAA;AAAA,MAETM,OAFS;AAAA,MAEAC,UAFA,kBAIhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,sBACE,uDACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAnCD;;AAqCA,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Navbar from \"./sub-components/Navbar\";\nimport Web3 from \"web3\";\n\nimport { loadavg } from \"os\";\n\nconst App = () => {\n\n  const [account, setAccount] = useState(\"0x0\");\n\n  // const Web3 = async () => {\n  //   if (window.ethereum) {\n  //     window.web3 = await new Web3(window.ethereum);\n  //     await window.ethereum.enable();\n  //   } else if (window.web3) {\n  //     window.web3 = await new Web3(window.web3.currentProvider);\n  //   } else {\n  //     window.alert(\"Download MetaMask to run this application!\");\n  //   }\n  // };\n\n  // const loadProvider = async () => {\n  //   console.log(window.web3);\n  //   console.log(window.ethereum);\n\n  //   console.log(\"Metamask not detected.\");\n  // };\n\n  // useEffect(() => {\n  //   Web3();\n  // }, []);\n\n  // useEffect(() => {\n  //   loadProvider();\n  // }, []);\n\n  return (\n    <>\n      <Navbar account={account} />\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}