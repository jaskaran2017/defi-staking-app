{"ast":null,"code":"\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = expandApplyAtRules;\n\nfunction partitionRules(root) {\n  if (!root.walkAtRules) return;\n  var applyParents = new Set();\n  root.walkAtRules('apply', function (rule) {\n    applyParents.add(rule.parent);\n  });\n\n  if (applyParents.size === 0) {\n    return;\n  }\n\n  var _iterator = _createForOfIteratorHelper(applyParents),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var rule1 = _step.value;\n      var nodeGroups = [];\n      var lastGroup = [];\n\n      var _iterator2 = _createForOfIteratorHelper(rule1.nodes),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var node = _step2.value;\n\n          if (node.type === 'atrule' && node.name === 'apply') {\n            if (lastGroup.length > 0) {\n              nodeGroups.push(lastGroup);\n              lastGroup = [];\n            }\n\n            nodeGroups.push([node]);\n          } else {\n            lastGroup.push(node);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      if (lastGroup.length > 0) {\n        nodeGroups.push(lastGroup);\n      }\n\n      if (nodeGroups.length === 1) {\n        continue;\n      }\n\n      var _iterator3 = _createForOfIteratorHelper([].concat(nodeGroups).reverse()),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var group = _step3.value;\n          var clone = rule1.clone({\n            nodes: []\n          });\n          clone.append(group);\n          rule1.after(clone);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      rule1.remove();\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n\nfunction expandApplyAtRules() {\n  return function (root) {\n    partitionRules(root);\n  };\n}","map":null,"metadata":{},"sourceType":"script"}