{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/apple/Desktop/remix_udamy/udamy_project/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/apple/Desktop/remix_udamy/udamy_project/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/apple/Desktop/remix_udamy/udamy_project/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/apple/Desktop/remix_udamy/udamy_project/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/apple/Desktop/remix_udamy/udamy_project/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar fsScandir = require(\"@nodelib/fs.scandir\");\n\nvar common = require(\"./common\");\n\nvar reader_1 = require(\"./reader\");\n\nvar SyncReader = /*#__PURE__*/function (_reader_1$default) {\n  _inherits(SyncReader, _reader_1$default);\n\n  function SyncReader() {\n    var _this;\n\n    _classCallCheck(this, SyncReader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SyncReader).apply(this, arguments));\n    _this._scandir = fsScandir.scandirSync;\n    _this._storage = [];\n    _this._queue = new Set();\n    return _this;\n  }\n\n  _createClass(SyncReader, [{\n    key: \"read\",\n    value: function read() {\n      this._pushToQueue(this._root, this._settings.basePath);\n\n      this._handleQueue();\n\n      return this._storage;\n    }\n  }, {\n    key: \"_pushToQueue\",\n    value: function _pushToQueue(directory, base) {\n      this._queue.add({\n        directory: directory,\n        base: base\n      });\n    }\n  }, {\n    key: \"_handleQueue\",\n    value: function _handleQueue() {\n      var _iterator = _createForOfIteratorHelper(this._queue.values()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n\n          this._handleDirectory(item.directory, item.base);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"_handleDirectory\",\n    value: function _handleDirectory(directory, base) {\n      try {\n        var entries = this._scandir(directory, this._settings.fsScandirSettings);\n\n        var _iterator2 = _createForOfIteratorHelper(entries),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var entry = _step2.value;\n\n            this._handleEntry(entry, base);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      } catch (error) {\n        this._handleError(error);\n      }\n    }\n  }, {\n    key: \"_handleError\",\n    value: function _handleError(error) {\n      if (!common.isFatalError(this._settings, error)) {\n        return;\n      }\n\n      throw error;\n    }\n  }, {\n    key: \"_handleEntry\",\n    value: function _handleEntry(entry, base) {\n      var fullpath = entry.path;\n\n      if (base !== undefined) {\n        entry.path = common.joinPathSegments(base, entry.name, this._settings.pathSegmentSeparator);\n      }\n\n      if (common.isAppliedFilter(this._settings.entryFilter, entry)) {\n        this._pushToStorage(entry);\n      }\n\n      if (entry.dirent.isDirectory() && common.isAppliedFilter(this._settings.deepFilter, entry)) {\n        this._pushToQueue(fullpath, base === undefined ? undefined : entry.path);\n      }\n    }\n  }, {\n    key: \"_pushToStorage\",\n    value: function _pushToStorage(entry) {\n      this._storage.push(entry);\n    }\n  }]);\n\n  return SyncReader;\n}(reader_1.default);\n\nexports.default = SyncReader;","map":null,"metadata":{},"sourceType":"script"}