{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.removeLeadingDotSegment = exports.escape = exports.makeAbsolute = exports.unixify = void 0;\n\nvar path = require(\"path\");\n\nvar LEADING_DOT_SEGMENT_CHARACTERS_COUNT = 2; // ./ or .\\\\\n\nvar UNESCAPED_GLOB_SYMBOLS_RE = /(\\\\?)([()*?[\\]{|}]|^!|[!+@](?=\\())/g;\n/**\n * Designed to work only with simple paths: `dir\\\\file`.\n */\n\nfunction unixify(filepath) {\n  return filepath.replace(/\\\\/g, '/');\n}\n\nexports.unixify = unixify;\n\nfunction makeAbsolute(cwd, filepath) {\n  return path.resolve(cwd, filepath);\n}\n\nexports.makeAbsolute = makeAbsolute;\n\nfunction escape(pattern) {\n  return pattern.replace(UNESCAPED_GLOB_SYMBOLS_RE, '\\\\$2');\n}\n\nexports.escape = escape;\n\nfunction removeLeadingDotSegment(entry) {\n  // We do not use `startsWith` because this is 10x slower than current implementation for some cases.\n  // eslint-disable-next-line @typescript-eslint/prefer-string-starts-ends-with\n  if (entry.charAt(0) === '.') {\n    var secondCharactery = entry.charAt(1);\n\n    if (secondCharactery === '/' || secondCharactery === '\\\\') {\n      return entry.slice(LEADING_DOT_SEGMENT_CHARACTERS_COUNT);\n    }\n  }\n\n  return entry;\n}\n\nexports.removeLeadingDotSegment = removeLeadingDotSegment;","map":null,"metadata":{},"sourceType":"script"}