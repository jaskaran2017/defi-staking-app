{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/apple/Desktop/remix_udamy/udamy_project/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/apple/Desktop/remix_udamy/udamy_project/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/apple/Desktop/remix_udamy/udamy_project/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/apple/Desktop/remix_udamy/udamy_project/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/apple/Desktop/remix_udamy/udamy_project/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar sync_1 = require(\"../readers/sync\");\n\nvar provider_1 = require(\"./provider\");\n\nvar ProviderSync = /*#__PURE__*/function (_provider_1$default) {\n  _inherits(ProviderSync, _provider_1$default);\n\n  function ProviderSync() {\n    var _this;\n\n    _classCallCheck(this, ProviderSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProviderSync).apply(this, arguments));\n    _this._reader = new sync_1.default(_this._settings);\n    return _this;\n  }\n\n  _createClass(ProviderSync, [{\n    key: \"read\",\n    value: function read(task) {\n      var root = this._getRootDirectory(task);\n\n      var options = this._getReaderOptions(task);\n\n      var entries = this.api(root, task, options);\n      return entries.map(options.transform);\n    }\n  }, {\n    key: \"api\",\n    value: function api(root, task, options) {\n      if (task.dynamic) {\n        return this._reader.dynamic(root, options);\n      }\n\n      return this._reader.static(task.patterns, options);\n    }\n  }]);\n\n  return ProviderSync;\n}(provider_1.default);\n\nexports.default = ProviderSync;","map":null,"metadata":{},"sourceType":"script"}