{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/apple/Desktop/remix_udamy/udamy_project/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dim = dim;\nexports.default = void 0;\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar alreadyShown = new Set();\n\nfunction log(chalk, messages, key) {\n  if (process.env.JEST_WORKER_ID !== undefined) return;\n  if (key && alreadyShown.has(key)) return;\n  if (key) alreadyShown.add(key);\n  console.warn('');\n  messages.forEach(function (message) {\n    return console.warn(chalk, '-', message);\n  });\n}\n\nfunction dim(input) {\n  return _chalk.default.dim(input);\n}\n\nvar _default = {\n  info: function info(key, messages) {\n    log.apply(void 0, [_chalk.default.bold.cyan('info')].concat(_toConsumableArray(Array.isArray(key) ? [key] : [messages, key])));\n  },\n  warn: function warn(key, messages) {\n    log.apply(void 0, [_chalk.default.bold.yellow('warn')].concat(_toConsumableArray(Array.isArray(key) ? [key] : [messages, key])));\n  },\n  risk: function risk(key, messages) {\n    log.apply(void 0, [_chalk.default.bold.magenta('risk')].concat(_toConsumableArray(Array.isArray(key) ? [key] : [messages, key])));\n  }\n};\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}