{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Desktop/remix_udamy/udamy_project/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/apple/Desktop/remix_udamy/udamy_project/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/apple/Desktop/remix_udamy/udamy_project/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/apple/Desktop/remix_udamy/udamy_project/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"./sub-components/Navbar\"; // import Web3 from \"web3\";\n// import { loadavg } from \"os\";\n\nvar App = function App() {\n  var _useState = useState(\"0x0\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      account = _useState2[0],\n      setAccount = _useState2[1];\n\n  useEffect(function () {\n    var Web3 = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 3;\n                return new Web3(window.ethereum);\n\n              case 3:\n                window.web3 = _context.sent;\n                _context.next = 6;\n                return window.ethereum.enable();\n\n              case 6:\n                _context.next = 15;\n                break;\n\n              case 8:\n                if (!window.web3) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.next = 11;\n                return new Web3(window.web3.currentProvider);\n\n              case 11:\n                window.web3 = _context.sent;\n                _context.next = 15;\n                break;\n\n              case 14:\n                window.alert(\"Download MetaMask to run this application!\");\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function Web3() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    var loadProvider = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return console.log(window.web3);\n\n              case 2:\n                _context2.next = 4;\n                return console.log(window.ethereum);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function loadProvider() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    loadProvider();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n    account: account,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/apple/Desktop/remix_udamy/udamy_project/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js"],"names":["React","useState","useEffect","Navbar","App","account","setAccount","Web3","window","ethereum","web3","enable","currentProvider","alert","loadProvider","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,yBAAnB,C,CACA;AAEA;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,kBACcH,QAAQ,CAAC,KAAD,CADtB;AAAA;AAAA,MACTI,OADS;AAAA,MACAC,UADA;;AAGhBJ,EAAAA,SAAS,CAAC,YAAM;AACX,QAAMK,IAAI;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA,qBACVC,MAAM,CAACC,QADG;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAEQ,IAAIF,IAAJ,CAASC,MAAM,CAACC,QAAhB,CAFR;;AAAA;AAEZD,gBAAAA,MAAM,CAACE,IAFK;AAAA;AAAA,uBAGNF,MAAM,CAACC,QAAP,CAAgBE,MAAhB,EAHM;;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAIHH,MAAM,CAACE,IAJJ;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAKQ,IAAIH,IAAJ,CAASC,MAAM,CAACE,IAAP,CAAYE,eAArB,CALR;;AAAA;AAKZJ,gBAAAA,MAAM,CAACE,IALK;AAAA;AAAA;;AAAA;AAOZF,gBAAAA,MAAM,CAACK,KAAP,CAAa,4CAAb;;AAPY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAJN,IAAI;AAAA;AAAA;AAAA,OAAV;;AAWH,QAAMO,YAAY;AAAA,2EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACbC,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACE,IAAnB,CADa;;AAAA;AAAA;AAAA,uBAEbK,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACC,QAAnB,CAFa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAZK,YAAY;AAAA;AAAA;AAAA,OAAlB;;AAMAA,IAAAA,YAAY;AACb,GAnBQ,EAmBN,EAnBM,CAAT;AAqBA,sBACE,uDACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAET,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CA7BD;;AA+BA,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Navbar from \"./sub-components/Navbar\";\n// import Web3 from \"web3\";\n\n// import { loadavg } from \"os\";\n\nconst App = () => {\n  const [account, setAccount] = useState(\"0x0\");\n\n  useEffect(() => {\n       const Web3 = async () => {\n      if (window.ethereum) {\n        window.web3 = await new Web3(window.ethereum);\n        await window.ethereum.enable();\n      } else if (window.web3) {\n        window.web3 = await new Web3(window.web3.currentProvider);\n      } else {\n        window.alert(\"Download MetaMask to run this application!\");\n      }\n    };\n\n    const loadProvider = async () => {\n      await console.log(window.web3);\n      await console.log(window.ethereum);\n\n      // console.log(\"Metamask not detected.\");\n    };\n    loadProvider();\n  }, []);\n\n  return (\n    <>\n      <Navbar account={account} />\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}