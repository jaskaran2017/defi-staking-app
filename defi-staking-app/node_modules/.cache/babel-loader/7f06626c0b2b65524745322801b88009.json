{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/apple/Desktop/remix_udamy/udamy_project/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _slicedToArray = require(\"/Users/apple/Desktop/remix_udamy/udamy_project/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"/Users/apple/Desktop/remix_udamy/udamy_project/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/apple/Desktop/remix_udamy/udamy_project/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar QuickLRU = /*#__PURE__*/function () {\n  function QuickLRU() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, QuickLRU);\n\n    if (!(options.maxSize && options.maxSize > 0)) {\n      throw new TypeError('`maxSize` must be a number greater than 0');\n    }\n\n    this.maxSize = options.maxSize;\n    this.onEviction = options.onEviction;\n    this.cache = new Map();\n    this.oldCache = new Map();\n    this._size = 0;\n  }\n\n  _createClass(QuickLRU, [{\n    key: \"_set\",\n    value: function _set(key, value) {\n      this.cache.set(key, value);\n      this._size++;\n\n      if (this._size >= this.maxSize) {\n        this._size = 0;\n\n        if (typeof this.onEviction === 'function') {\n          var _iterator = _createForOfIteratorHelper(this.oldCache.entries()),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var _step$value = _slicedToArray(_step.value, 2),\n                  _key = _step$value[0],\n                  _value = _step$value[1];\n\n              this.onEviction(_key, _value);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n\n        this.oldCache = this.cache;\n        this.cache = new Map();\n      }\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      if (this.cache.has(key)) {\n        return this.cache.get(key);\n      }\n\n      if (this.oldCache.has(key)) {\n        var value = this.oldCache.get(key);\n        this.oldCache.delete(key);\n\n        this._set(key, value);\n\n        return value;\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      if (this.cache.has(key)) {\n        this.cache.set(key, value);\n      } else {\n        this._set(key, value);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return this.cache.has(key) || this.oldCache.has(key);\n    }\n  }, {\n    key: \"peek\",\n    value: function peek(key) {\n      if (this.cache.has(key)) {\n        return this.cache.get(key);\n      }\n\n      if (this.oldCache.has(key)) {\n        return this.oldCache.get(key);\n      }\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      var deleted = this.cache.delete(key);\n\n      if (deleted) {\n        this._size--;\n      }\n\n      return this.oldCache.delete(key) || deleted;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.cache.clear();\n      this.oldCache.clear();\n      this._size = 0;\n    }\n  }, {\n    key: \"keys\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function keys() {\n      var _iterator2, _step2, _step2$value, key;\n\n      return _regeneratorRuntime.wrap(function keys$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _iterator2 = _createForOfIteratorHelper(this);\n              _context.prev = 1;\n\n              _iterator2.s();\n\n            case 3:\n              if ((_step2 = _iterator2.n()).done) {\n                _context.next = 9;\n                break;\n              }\n\n              _step2$value = _slicedToArray(_step2.value, 1), key = _step2$value[0];\n              _context.next = 7;\n              return key;\n\n            case 7:\n              _context.next = 3;\n              break;\n\n            case 9:\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n\n              _iterator2.e(_context.t0);\n\n            case 14:\n              _context.prev = 14;\n\n              _iterator2.f();\n\n              return _context.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, keys, this, [[1, 11, 14, 17]]);\n    })\n  }, {\n    key: \"values\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function values() {\n      var _iterator3, _step3, _step3$value, value;\n\n      return _regeneratorRuntime.wrap(function values$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _iterator3 = _createForOfIteratorHelper(this);\n              _context2.prev = 1;\n\n              _iterator3.s();\n\n            case 3:\n              if ((_step3 = _iterator3.n()).done) {\n                _context2.next = 9;\n                break;\n              }\n\n              _step3$value = _slicedToArray(_step3.value, 2), value = _step3$value[1];\n              _context2.next = 7;\n              return value;\n\n            case 7:\n              _context2.next = 3;\n              break;\n\n            case 9:\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](1);\n\n              _iterator3.e(_context2.t0);\n\n            case 14:\n              _context2.prev = 14;\n\n              _iterator3.f();\n\n              return _context2.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, values, this, [[1, 11, 14, 17]]);\n    })\n  }, {\n    key: Symbol.iterator,\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function value() {\n      var _iterator4, _step4, item, _iterator5, _step5, _item, _item2, key;\n\n      return _regeneratorRuntime.wrap(function value$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _iterator4 = _createForOfIteratorHelper(this.cache);\n              _context3.prev = 1;\n\n              _iterator4.s();\n\n            case 3:\n              if ((_step4 = _iterator4.n()).done) {\n                _context3.next = 9;\n                break;\n              }\n\n              item = _step4.value;\n              _context3.next = 7;\n              return item;\n\n            case 7:\n              _context3.next = 3;\n              break;\n\n            case 9:\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](1);\n\n              _iterator4.e(_context3.t0);\n\n            case 14:\n              _context3.prev = 14;\n\n              _iterator4.f();\n\n              return _context3.finish(14);\n\n            case 17:\n              _iterator5 = _createForOfIteratorHelper(this.oldCache);\n              _context3.prev = 18;\n\n              _iterator5.s();\n\n            case 20:\n              if ((_step5 = _iterator5.n()).done) {\n                _context3.next = 28;\n                break;\n              }\n\n              _item = _step5.value;\n              _item2 = _slicedToArray(_item, 1), key = _item2[0];\n\n              if (this.cache.has(key)) {\n                _context3.next = 26;\n                break;\n              }\n\n              _context3.next = 26;\n              return _item;\n\n            case 26:\n              _context3.next = 20;\n              break;\n\n            case 28:\n              _context3.next = 33;\n              break;\n\n            case 30:\n              _context3.prev = 30;\n              _context3.t1 = _context3[\"catch\"](18);\n\n              _iterator5.e(_context3.t1);\n\n            case 33:\n              _context3.prev = 33;\n\n              _iterator5.f();\n\n              return _context3.finish(33);\n\n            case 36:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, value, this, [[1, 11, 14, 17], [18, 30, 33, 36]]);\n    })\n  }, {\n    key: \"size\",\n    get: function get() {\n      var oldCacheSize = 0;\n\n      var _iterator6 = _createForOfIteratorHelper(this.oldCache.keys()),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var key = _step6.value;\n\n          if (!this.cache.has(key)) {\n            oldCacheSize++;\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n\n      return Math.min(this._size + oldCacheSize, this.maxSize);\n    }\n  }]);\n\n  return QuickLRU;\n}();\n\nmodule.exports = QuickLRU;","map":null,"metadata":{},"sourceType":"script"}