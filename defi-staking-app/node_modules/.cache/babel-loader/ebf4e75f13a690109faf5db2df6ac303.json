{"ast":null,"code":"import _classCallCheck from \"/Users/apple/Documents/defi-App/defi-staking-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/apple/Documents/defi-App/defi-staking-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/apple/Documents/defi-App/defi-staking-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/apple/Documents/defi-App/defi-staking-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/apple/Documents/defi-App/defi-staking-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/apple/Documents/defi-App/defi-staking-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/apple/Documents/defi-App/defi-staking-app/src/components/Airdrop.js\";\nimport React, { Component } from \"react\";\n\nvar Airdrop = /*#__PURE__*/function (_Component) {\n  _inherits(Airdrop, _Component);\n\n  //Airdrop to have timer\n  //it should initialize the countdown after customer have staked a certain amount of tethers\n  //timer functionality, countdown, startTimer, state- fir the time to work\n  function Airdrop() {\n    var _this;\n\n    _classCallCheck(this, Airdrop);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Airdrop).call(this));\n    _this.state = {\n      time: {},\n      seconds: 20\n    };\n    _this.timer = 0; // this.startTime = this.startTime.bind(this);\n\n    _this.countDown = _this.countDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // time convert function\n\n\n  _createClass(Airdrop, [{\n    key: \"secondsToTime\",\n    value: function secondsToTime(secs) {\n      var hours, minutes, seconds;\n      hours = Math.floor(secs / (60 * 60));\n      var devisor_for_mint = secs % (60 * 60);\n      minutes = Math.floor(devisor_for_mint / 60);\n      var devisor_for_secs = devisor_for_mint % 60;\n      seconds = Math.ceil(devisor_for_secs);\n      var obj = {\n        h: hours,\n        m: minutes,\n        s: seconds\n      };\n      return obj;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var timeLeft = this.secondsToTime(this.state.seconds);\n      this.setState({\n        time: timeLeft\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }, this.state.time.m, \":\", this.state.time.s);\n    }\n  }]);\n\n  return Airdrop;\n}(Component);\n\nexport { Airdrop as default };","map":{"version":3,"sources":["/Users/apple/Documents/defi-App/defi-staking-app/src/components/Airdrop.js"],"names":["React","Component","Airdrop","state","time","seconds","timer","countDown","bind","secs","hours","minutes","Math","floor","devisor_for_mint","devisor_for_secs","ceil","obj","h","m","s","timeLeft","secondsToTime","setState","color"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEqBC,O;;;AACnB;AACA;AACA;AAEA,qBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAIA,UAAKC,KAAL,GAAa,CAAb,CANY,CAOZ;;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,uDAAjB;AARY;AASb,G,CAGD;;;;;kCACcC,I,EAAM;AAClB,UAAIC,KAAJ,EAAWC,OAAX,EAAoBN,OAApB;AACAK,MAAAA,KAAK,GAAGE,IAAI,CAACC,KAAL,CAAWJ,IAAI,IAAI,KAAK,EAAT,CAAf,CAAR;AAEA,UAAIK,gBAAgB,GAAGL,IAAI,IAAI,KAAK,EAAT,CAA3B;AACAE,MAAAA,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,gBAAgB,GAAG,EAA9B,CAAV;AAEA,UAAIC,gBAAgB,GAAGD,gBAAgB,GAAG,EAA1C;AACAT,MAAAA,OAAO,GAAGO,IAAI,CAACI,IAAL,CAAUD,gBAAV,CAAV;AAEA,UAAIE,GAAG,GAAG;AACRC,QAAAA,CAAC,EAAER,KADK;AAERS,QAAAA,CAAC,EAAER,OAFK;AAGRS,QAAAA,CAAC,EAAEf;AAHK,OAAV;AAKA,aAAOY,GAAP;AACD;;;wCAEmB;AAClB,UAAII,QAAQ,GAAG,KAAKC,aAAL,CAAmB,KAAKnB,KAAL,CAAWE,OAA9B,CAAf;AACA,WAAKkB,QAAL,CAAc;AAAEnB,QAAAA,IAAI,EAAEiB;AAAR,OAAd;AACD;;;6BAEQ;AACP,0BACE;AAAK,QAAA,KAAK,EAAE;AAAEG,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKrB,KAAL,CAAWC,IAAX,CAAgBe,CADnB,OACuB,KAAKhB,KAAL,CAAWC,IAAX,CAAgBgB,CADvC,CADF;AAKD;;;;EA/CkCnB,S;;SAAhBC,O","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Airdrop extends Component {\n  //Airdrop to have timer\n  //it should initialize the countdown after customer have staked a certain amount of tethers\n  //timer functionality, countdown, startTimer, state- fir the time to work\n\n  constructor() {\n    super();\n    this.state = {\n      time: {},\n      seconds: 20,\n    };\n    this.timer = 0;\n    // this.startTime = this.startTime.bind(this);\n    this.countDown = this.countDown.bind(this);\n  }\n  \n\n  // time convert function\n  secondsToTime(secs) {\n    let hours, minutes, seconds;\n    hours = Math.floor(secs / (60 * 60));\n\n    let devisor_for_mint = secs % (60 * 60);\n    minutes = Math.floor(devisor_for_mint / 60);\n\n    let devisor_for_secs = devisor_for_mint % 60;\n    seconds = Math.ceil(devisor_for_secs);\n\n    let obj = {\n      h: hours,\n      m: minutes,\n      s: seconds,\n    };\n    return obj;\n  }\n\n  componentDidMount() {\n    let timeLeft = this.secondsToTime(this.state.seconds);\n    this.setState({ time: timeLeft });\n  }\n\n  render() {\n    return (\n      <div style={{ color: \"black\" }}>\n        {this.state.time.m}:{this.state.time.s}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}